# This part is needed if you want to redirect from www to non-www
# or vice-versa (you need to swap the server_name)
# this is also needed for https if you need to redirect them
#
server {
	server_name www.dev.example.com;
	rewrite ^(.*) http://dev.example.com$1 permanent;
}

server {
	listen *:80;
	server_name dev.example.com

	# Noone needs to know what you're running
	#
	server_tokens off;

	# redirect to http to https
	#
	return 301 https://dev.example.com:443$request_uri;
}

server {
	listen *:443 ssl;
	server_name dev.example.com;
	server_tokens off;

	root /var/www/example/htdocs

	# Note that the names of the cert and the key
	# should be the same as the website (dev.example.com.crt)
	#
	ssl on;
	ssl_certificate /path/to/cert/dev.example.com.crt;
	ssl_certificate_key /path/to/key/dev.example.com.key;

	# Strong SSL Security
	#
	ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4';
	ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_session_cache  builtin:1000  shared:SSL:10m;
	ssl_session_timeout  5m;
}
